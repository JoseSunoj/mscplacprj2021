name: Docker Image CI

on:
  schedule:
    - cron: '00 19 * * *'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]


jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - 
       name: build local container
       uses: docker/build-push-action@v2
       with:
        context: .
        tags: ${{ secrets.DOCKER_REPO }}:msclprj2021-v${{github.run_number}}
        push: false
        load: true
      - 
        name: Scan image
        uses: anchore/scan-action@v2
        id: scan
        with:
         image: ${{ secrets.DOCKER_REPO }}:msclprj2021-v${{github.run_number}}
         fail-build: true
         severity-cutoff: high
         acs-report-enable: true
      - 
       name: upload Anchore scan SARIF report
       uses: github/codeql-action/upload-sarif@v1
       with:
        sarif_file: ${{ steps.scan.outputs.sarif }}
      - 
        name: Inspect action SARIF report
        run: cat ${{ steps.scan.outputs.sarif }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ secrets.DOCKER_REPO }}:msclprj2021-v${{github.run_number}}

         # Use an external cache source for the build, in this case DockerHub repo
          cache-from: type=registry,ref=${{ secrets.DOCKER_REPO }}:msclprj2021-v${{github.run_number}} 
          cache-to: type=inline # inline writes the cache metadata into the image configuration
